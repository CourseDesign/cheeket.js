"use strict";(self.webpackChunkcheeket_document=self.webpackChunkcheeket_document||[]).push([[671],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),g=a,m=d["".concat(l,".").concat(g)]||d[g]||p[g]||o;return t?r.createElement(m,s(s({ref:n},u),{},{components:t})):r.createElement(m,s({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},355:function(e,n,t){t.r(n),t.d(n,{assets:function(){return v},contentTitle:function(){return y},default:function(){return w},frontMatter:function(){return f},metadata:function(){return h},toc:function(){return b}});var r=t(7462),a=t(3366),o=t(7294),s=t(3905),i=t(2389),l=t(5979),c=t(6010),u="tabItem_LplD";function p(e){var n,t,a,s=e.lazy,i=e.block,p=e.defaultValue,d=e.values,g=e.groupId,m=e.className,f=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=d?d:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),h=(0,l.lx)(y,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===p?p:null!=(n=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=f[0])?void 0:a.props.value;if(null!==v&&!y.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,l.UB)(),k=b.tabGroupChoices,w=b.setTabGroupChoices,T=(0,o.useState)(v),O=T[0],x=T[1],C=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var j=k[g];null!=j&&j!==O&&y.some((function(e){return e.value===j}))&&x(j)}var S=function(e){var n=e.currentTarget,t=C.indexOf(n),r=y[t].value;r!==O&&(E(n),x(r),null!=g&&w(g,r))},I=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=C.indexOf(e.currentTarget)+1;t=C[r]||C[0];break;case"ArrowLeft":var a=C.indexOf(e.currentTarget)-1;t=C[a]||C[C.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":i},m)},y.map((function(e){var n=e.value,t=e.label,a=e.attributes;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:function(e){return C.push(e)},onKeyDown:I,onFocus:S,onClick:S},a,{className:(0,c.Z)("tabs__item",u,null==a?void 0:a.className,{"tabs__item--active":O===n})}),null!=t?t:n)}))),s?(0,o.cloneElement)(f.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==O})}))))}function d(e){var n=(0,i.Z)();return o.createElement(p,(0,r.Z)({key:String(n)},e))}function g(e){var n=e.children,t=e.hidden,r=e.className;return o.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}var m=["components"],f={sidebar_position:1},y="Introduction",h={unversionedId:"intro",id:"intro",title:"Introduction",description:"cheeket is a new IoC framework, which aims to be a smaller, more expressive, and more robust foundation. By leveraging async functions, cheeket allows you to inject dependency as async. cheeket allows you to easily extend functionality and manage the lifecycle of your dependencies through middleware and event listeners.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/cheeket.js/docs/intro",editUrl:"https://github.com/siyual-park/cheeket.js/tree/main/documents/cheeket-document/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Container",permalink:"/cheeket.js/docs/cheeket/container"}},v={},b=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2}],k={toc:b};function w(e){var n=e.components,t=(0,a.Z)(e,m);return(0,s.kt)("wrapper",(0,r.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"cheeket is a new IoC framework, which aims to be a smaller, more expressive, and more robust foundation. By leveraging async functions, cheeket allows you to inject dependency as async. cheeket allows you to easily extend functionality and manage the lifecycle of your dependencies through middleware and event listeners. "),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)(d,{groupId:"npm2yarn",mdxType:"Tabs"},(0,s.kt)(g,{value:"npm",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install cheeket\n"))),(0,s.kt)(g,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add cheeket\n")))),(0,s.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Container, Token, InternalEvents, containerScope, asObject, asArray } from 'cheeket';\n\ninterface Logger {\n  log: (message: string) => void;\n}\n\ntype Strategy = (message: string) => string | null;\n\nclass ChatBot {\n  private readonly stategies: Strategy[] = [];\n  \n  constructor(\n    private readonly logger: Logger\n  ) {\n  }\n  \n  register(strategy: Strategy): this {\n    this.stategies.push(strategy);\n    return this;\n  }\n  \n  chat(message: string): string | null {\n    this.logger(`request: ${message}`);\n\n    let response: string | null = null;\n    for (const statege of this.stategies) {\n      response = statege(message);\n      if (response !== null) {\n        break;\n      }\n    }\n    \n    this.logger(`response: ${response}`);\n    return response;\n  }\n}\n\n\nconst LoggerToken = Symbol('Logger') as Token<Logger>;\nconst StrategiesToken = Symbol('Strategy[]') as Token<Strategy[]>;\nconst ChatbotToken = Symbol('ChatBot') as Token<ChatBot>;\n\nconst loggerFactroy = containerScope<Logger>(() => (message) => {\n  console.log(message);\n});\nconst passStrategyFactroy = containerScope<Strategy>(() => (message) => message);\nconst chatbotFactory = containerScope<ChatBot>(async (context) => {\n  const logger = await context.resolve(LoggerToken);\n  return new ChatBot(logger);\n});\n\n\nconst container = new Container();\n\ncontainer.register(LoggerToken, asObject(loggerFactroy));\ncontainer.register(StrategiesToken, asArray(passStrategyFactroy));\ncontainer.register(ChatbotToken, asObject(chatbotFactory));\n\ncontainer.on(InternalEvents.PostCreate, async (context) => {\n  if (context.request !== ChatbotToken) {\n    return;\n  }\n\n  const strategies = await context.resolve(StrategiesToken);\n  strategies.forEach((stratege) => {\n    (context.response as ChatBot).register(stratege);\n  });\n});\n\n\nconst chatbot = await container.resolve(ChatbotToken);\n")))}w.isMDXComponent=!0}}]);