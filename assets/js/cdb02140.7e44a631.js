"use strict";(self.webpackChunkcheeket_document=self.webpackChunkcheeket_document||[]).push([[310],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(f,c(c({ref:t},d),{},{components:n})):r.createElement(f,c({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3305:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),c=["components"],i={sidebar_position:3},s="Middleware",l={unversionedId:"cheeket/middleware",id:"cheeket/middleware",title:"Middleware",description:"Middleware defines the process for processing requests. Cheeket creates a context when requested and calls middleware.",source:"@site/docs/cheeket/middleware.md",sourceDirName:"cheeket",slug:"/cheeket/middleware",permalink:"/cheeket.js/docs/cheeket/middleware",editUrl:"https://github.com/siyual-park/cheeket.js/tree/main/documents/cheeket-document/docs/cheeket/middleware.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Context",permalink:"/cheeket.js/docs/cheeket/context"},next:{title:"Event",permalink:"/cheeket.js/docs/cheeket/event"}},d={},u=[],p={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"Middleware defines the process for processing requests. Cheeket creates a context when requested and calls middleware."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type Middleware<T> = (context: Context<T>, next: Next) => Promise<void> | void;\n")),(0,a.kt)("p",null,"Cheeket handles all operations as middleware, such as those that inherit the container from the parent container (chain) or those that route middleware to the appropriate token (route)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"|       | -> next -> |       |\n|       |            |       | -> next -> .....\n|       |            |       | <--------  .....\n|       |            | route | \n|       | <--------- |       |\n| chain |            |       |\n\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"function chain(resolver: NestedResolver | undefined): Middleware<unknown> {\n  return async (context, next) => {\n    await next();\n\n    if (context.response === undefined) {\n      context.response = await resolver?.resolve(context.request, context);\n    }\n  };\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"function route(storage: MiddlewareStorage): Middleware<unknown> {\n  return async (context, next) => {\n    await next();\n\n    if (context.response === undefined) {\n      const middleware = storage.get(context.request);\n      await middleware?.(context, async () => {});\n    }\n  };\n}\n")),(0,a.kt)("p",null,"New solutions can be defined by adding new middleware"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"container.use(mocker.mock());\n")))}m.isMDXComponent=!0}}]);